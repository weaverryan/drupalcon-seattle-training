diff --git a/modules/custom/coffee_shop/src/Plugin/Block/CoffeeBlock.php b/modules/custom/coffee_shop/src/Plugin/Block/CoffeeBlock.php
index 97cf0e82..598c8f7f 100644
--- a/modules/custom/coffee_shop/src/Plugin/Block/CoffeeBlock.php
+++ b/modules/custom/coffee_shop/src/Plugin/Block/CoffeeBlock.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\coffee_shop\Plugin\Block;
 
+use Drupal\coffee_shop\Service\Barista;
 use Drupal\Core\Block\BlockBase;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -15,7 +16,11 @@
  * )
  */
 class CoffeeBlock extends BlockBase implements ContainerFactoryPluginInterface {
-  public function __construct(array $configuration, $plugin_id, $plugin_definition) {
+  private $barista;
+
+  public function __construct(Barista $barista, array $configuration, $plugin_id, $plugin_definition) {
+    $this->barista = $barista;
+
     parent::__construct($configuration, $plugin_id, $plugin_definition);
   }
 
@@ -23,16 +28,13 @@ public function __construct(array $configuration, $plugin_id, $plugin_definition
    * {@inheritdoc}
    */
   public function build() {
-    $barista =  \Drupal::getContainer()
-      ->get('coffee_shop.barista');
-
     $build = [];
-    $build['coffee_block']['#markup'] = $barista->prepareDrink();
+    $build['coffee_block']['#markup'] = $this->barista->prepareDrink();
 
     return $build;
   }
 
   public static function create(ContainerInterface $container, array $configuration, $plugin_id, $plugin_definition) {
-    return new self($configuration, $plugin_id, $plugin_definition);
+    return new self($container->get('coffee_shop.barista'), $configuration, $plugin_id, $plugin_definition);
   }
 }
